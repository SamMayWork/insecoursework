{"version":3,"sources":["images/like.svg","images/nolike.svg","containers/LoginPage/index.js","components/List/index.js","components/LikeButton/index.js","components/Comment/index.js","containers/DashboardPage/index.js","containers/AccountPage/index.js","index.js","containers/App/index.js"],"names":["module","exports","responseGoogle","response","token","uc","id_token","console","log","fetch","credentials","method","headers","then","res","LoginPage","className","buttonText","clientId","onSuccess","List","props","children","LikeButton","state","like","toggleLike","bind","this","setState","onClick","alt","src","likeImg","noLikeImg","Component","Comment","author","Date","date","toLocaleDateString","DashboardPage","error","isLoaded","items","comments","message","map","comment","i","key","title","replies","json","result","data","forEach","commentData","commentObj","num_comments","created","push","PrivacyZone","CardHeader","ListItem","ListItemIcon","Checkbox","ListItemText","primary","secondary","NotificationZone","StyledButton","styled","Button","DangerZone","color","variant","AccountPage","MOUNT_NODE","document","getElementById","ReactDOM","render","exact","path","component","Login","Dashboard","Account"],"mappings":"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","file":"static/js/main.1b12df19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/like.1a52547f.svg\";","module.exports = __webpack_public_path__ + \"static/media/nolike.de3f1e3d.svg\";","/**\n * \n * LoginPage\n * \n * This is the first thing users of our App, at the '/' route\n */\n\nimport React from 'react';\nimport GoogleLogin from 'react-google-login';\n\nimport './loginPage.css';\n\nconst clientID = \"817279853236-toe6rfq5ebg7rife6fvd82hh0eclpt3t.apps.googleusercontent.com\";\n\nfunction responseGoogle(response) {\n  let token = response.uc.id_token;\n  console.log(response, token);\n  fetch('/auth/test', {\n    credentials: 'same-origin',\n    method: 'GET',\n    headers: {\n      'Authorization': 'Bearer ' + token\n    }\n  }).then((res) => console.log(res)).then(\n    (res) => console.log(res)\n  );\n}\n\nexport function LoginPage() {\n  return (\n    <div className = \"loginPage\">\n      <h1>\n        UoP Forum\n      </h1>\n      <GoogleLogin\n        buttonText=\"Login with Google\"\n        clientId={clientID}\n        onSuccess={responseGoogle}\n      />\n    </div>\n  );\n}\n\nexport default LoginPage;","/**\n * \n * List\n * \n * Generic list component for displaying list of other components\n */\n\nimport React from 'react';\n\nimport './index.css';\n\nexport default function List(props) {\n  return (\n    <div className=\"list\">\n      {props.children}\n    </div>\n  );\n}","import React, {Component} from \"react\";\nimport likeImg from \"../../images/like.svg\";\nimport noLikeImg from \"../../images/nolike.svg\";\n\nclass LikeButton extends Component {\n  state = {\n    like: false\n  };\n  constructor(props) {\n    super(props);\n    this.toggleLike = this.toggleLike.bind(this);\n  }\n  toggleLike() {\n    this.setState(state => ({\n      like: !state.like\n    }));\n  }\n  render() {\n    if (this.state.like) {\n      return (\n        <div className=\"post_like\" onClick={this.toggleLike}>\n          <img alt=\"like buton\" className=\"post_like_image\" src={likeImg}/>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"post_like\" onClick={this.toggleLike}>\n          <img alt=\"like button\" className=\"post_nolike_image\" src={noLikeImg}/>\n        </div>\n      );\n    }\n  }\n}\n\nexport default LikeButton;","import React from \"react\";\nimport LikeButton from \"../LikeButton\";\n\nimport \"./index.css\";\n\nfunction Comment(props) {\n  return (\n    <div className=\"comment\">\n      <div className=\"comment_title\">\n        {/*{props.text}*/}\n      </div>\n      <div className = \"comment_info\">\n        <div className=\"comment_summary\">\n          <div className=\"comment_author\">\n            {props.author}\n          </div>\n          <div className=\"comment_replies\">\n          {new Date(props.date).toLocaleDateString()}\n          </div>\n          <div className=\"comment_stats\">\n          <div className=\"comment_likes\">\n            <LikeButton/>\n          </div>  \n          </div>\n        </div>\n\n      </div>\n     </div>\n  );\n}\n\nexport default Comment;","/**\n * \n * Dashboard\n * \n * First screen user's see after logging in, provides them useful info at a glance\n */\n\nimport React, {Component} from 'react';\nimport List from '../../components/List';\nimport Comment from '../../components/Comment';\n\nexport default class DashboardPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    }\n  }\n  render() {\n    const {error, isLoaded, comments } = this.state;\n    if (error) {\n      return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n      return <div>Loading...</div>\n    } else {\n      console.log(comments);\n      return (\n        <div className = \"dashboardPage\">\n          <List>\n            {comments.map((comment, i) => (\n              <Comment\n                key = {i}\n                title = {comment.title}\n                author = {comment.author}\n                replies = {comment.replies}\n                date = {comment.date}\n              />\n            ))}\n          </List>\n        </div>\n      );\n    }\n  }\n  componentDidMount() {\n    fetch(\"https://www.reddit.com/r/popular.json\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          let comments = [];\n          result.data.children.forEach((comment) => {\n            let commentData = comment.data;\n            let commentObj = {\n              title: commentData.title,\n              author: commentData.author,\n              replies: commentData.num_comments,\n              date: commentData.created * 1000\n            };\n            comments.push(commentObj);\n          })\n          this.setState({\n            isLoaded: true,\n            comments: comments\n          });\n          console.log(result);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n}","/**\n * \n * AccountPage\n * \n * This page allows users to change privacy settings and delete their account\n */\n\nimport React, {useState} from 'react';\nimport {\n  Card,\n  Checkbox,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Divider,\n  Grid,\n  Button,\n  TextField,\n  List,\n  ListItem,\n  ListItemText,\n  ListItemIcon\n} from '@material-ui/core';\nimport styled from 'styled-components';\n\nimport './accountPage.css';\n\n/*\nconst AccountDetails = props => {\n  const {className, ...rest} = props;\n  const {values, setValues} = useState({\n    displayName: 'John Doe',\n  });\n  return (\n    <div style={styling}>\n      <Card>\n        <CardHeader\n          title=\"Account Page\"\n        />\n      </Card>\n      <Divider/>\n      <Card>\n      <CardHeader\n          subheader=\"Privacy\"\n        />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              Display Real Name <Checkbox/>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Divider/>\n      <Card>\n        <CardHeader\n          subheader=\"Notifications\"\n        />\n        <CardContent>\n          <Grid container spacing={3}>\n            <Grid item md={6} xs={12}>\n              Receive Notifications <Checkbox/>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n      <Divider/>\n      <Card>\n        <CardHeader\n          subheader=\"Danger Zone\"\n        />\n        <CardActions>\n          <Button\n            color=\"red\"\n            variant=\"contained\"\n          >\n            Delete account\n          </Button>\n        </CardActions>\n      </Card>\n    </div>\n  )\n};\n*/\n\nconst PrivacyZone = props => {\n  return (\n    <div className=\"accountPageZone\">\n      <CardHeader\n        title=\"Privacy\"\n      />\n      <div>\n        <List>\n          <ListItem>\n            <ListItemIcon>\n              <Checkbox/>\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Real Name\"\n              secondary=\"Use your real name on your posts, if not will only use your UP number\"\n            />\n          </ListItem>\n        </List>\n      </div>\n    </div>\n  );\n};\n\nconst NotificationZone = props => {\n  return (\n    <div className=\"accountPageZone\">\n      <CardHeader\n        title=\"Notifications\"\n      />\n      <div>\n        <List>\n          <ListItem>\n            <ListItemIcon>\n              <Checkbox/>\n            </ListItemIcon>\n            <ListItemText\n              primary=\"Active\"\n              secondary=\"We will send notification emails to the listed address when someone responds to your post\"\n            />\n          </ListItem>\n        </List>\n      </div>\n    </div>\n  )\n}\n\nconst StyledButton = styled(Button)`\n  & {\n    font-weight: 600;\n  }\n  &:hover {\n    background: red;\n    color: white;\n  }\n`;\n\nconst DangerZone = props => {\n  return (\n    <div className=\"accountPageZone\">\n      <CardHeader\n        title=\"Danger Zone\"\n      />\n      <div className=\"accountPageDanger\">\n        <List>\n          <ListItem>\n            <ListItemText\n              primary=\"Delete this account\"\n              secondary=\"Once you delete an account, there is no going back. Please be certain.\"\n            />\n            <StyledButton\n              color=\"secondary\"\n              variant=\"outlined\"\n            >\n              Delete account\n            </StyledButton>\n          </ListItem>\n        </List>\n      </div>\n    </div>\n  );\n};\n\nexport function AccountPage() {\n  return (\n    <div className = \"accountPage\">\n      <NotificationZone/>\n      <PrivacyZone/>\n      <DangerZone/>\n    </div>\n  );\n}\n\nexport default AccountPage;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\n\nconst MOUNT_NODE = document.getElementById('root');\n\nReactDOM.render(\n  <App />,\n  MOUNT_NODE\n);","/**\n * \n * App\n * \n * This component is the skeleton around the actual pages and only contains code\n * which is seen on all pages\n */\n\nimport React from 'react';\n\nimport Login from '../LoginPage';\nimport Dashboard from '../DashboardPage';\nimport Account from '../AccountPage';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from 'react-router-dom';\n\nimport './index.css';\n\nexport default function App() {\n  return (\n    <div className = \"app\">\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Login}/>\n          <Route path=\"/dashboard\" component={Dashboard}/>\n          <Route path=\"/account\" component={Account}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}"],"sourceRoot":""}